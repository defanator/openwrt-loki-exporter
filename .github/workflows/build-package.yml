name: build package

on:
  push:
  workflow_dispatch:
    inputs:
      openwrt_version:
        description: "OpenWrt version"
        type: string
        required: true
        default: "23.05.3"
      openwrt_arch:
        description: "OpenWrt arch"
        type: string
        required: true
        default: "mips_24kc"
      openwrt_target:
        description: "OpenWrt target"
        type: string
        required: true
        default: "ath79"
      openwrt_subtarget:
        description: "OpenWrt subtarget"
        type: string
        required: true
        default: "generic"
      openwrt_vermagic:
        description: "OpenWrt vermagic"
        type: string
        required: true
        default: "auto"

env:
  OPENWRT_VERSION: ${{ inputs.openwrt_version || '23.05.3' }}
  OPENWRT_ARCH: ${{ inputs.openwrt_arch || 'mips_24kc' }}
  OPENWRT_TARGET: ${{ inputs.openwrt_target || 'ath79' }}
  OPENWRT_SUBTARGET: ${{ inputs.openwrt_target || 'generic' }}
  OPENWRT_VERMAGIC: ${{ inputs.openwrt_target || 'auto' }}

jobs:
  build:
    name: "v${{ matrix.build_env.tag }} - ${{ matrix.build_env.pkgarch }} :: ${{ matrix.build_env.target }}/${{ matrix.build_env.subtarget }} openwrt build"
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        build_env:
          - tag: ${{ env.OPENWRT_VERSION }}
            pkgarch: ${{ env.OPENWRT_ARCH }}
            target: ${{ env.OPENWRT_TARGET }}
            subtarget: ${{ env.OPENWRT_SUBTARGET }}
            vermagic: ${{ env.OPENWRT_VERMAGIC }}

    env:
      OPENWRT_RELEASE: ${{ matrix.build_env.tag }}
      OPENWRT_ARCH: ${{ matrix.build_env.pkgarch }}
      OPENWRT_TARGET: ${{ matrix.build_env.target }}
      OPENWRT_SUBTARGET: ${{ matrix.build_env.subtarget }}
      OPENWRT_VERMAGIC: ${{ matrix.build_env.vermagic }}

    steps:
      - name: checkout openwrt-loki-exporter
        uses: actions/checkout@v4
        with:
          path: openwrt-loki-exporter
          fetch-depth: 0

      - name: checkout openwrt
        uses: actions/checkout@v4
        with:
          path: openwrt
          repository: openwrt/openwrt
          ref: v${{ matrix.build_env.tag }}
          fetch-depth: 0

      - name: restore cached toolchain
        id: restore-toolchain-cache
        uses: actions/cache/restore@v4
        with:
          fail-on-cache-miss: false
          key: ${{ runner.os }}-openwrt-cache-toolchain-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch }}-${{ matrix.build_env.target }}-${{ matrix.build_env.subtarget }}
          restore-keys: |
            ${{ runner.os }}-openwrt-cache-tools-${{ matrix.build_env.pkgarch }}-
          path: |
            openwrt/.config
            openwrt/.config.old
            openwrt/feeds.conf
            openwrt/bin/**
            openwrt/build_dir/**
            openwrt/dl/**
            openwrt/feeds/**
            openwrt/package/**
            openwrt/staging_dir/**
            openwrt/tmp/**

      - name: building openwrt toolchain
        if: steps.restore-toolchain-cache.outputs.cache-hit != 'true'
        id: build-toolchain
        run: |
          set -x
          cd openwrt-loki-exporter
          make show-env
          time -p make build-toolchain
          make purge-circular-symlinks

      - name: save toolchain cache
        if: steps.restore-toolchain-cache.outputs.cache-hit != 'true'
        id: save-toolchain-cache
        uses: actions/cache/save@v4
        with:
          key: ${{ runner.os }}-openwrt-cache-toolchain-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch }}-${{ matrix.build_env.target }}-${{ matrix.build_env.subtarget }}
          path: |
            openwrt/.config
            openwrt/.config.old
            openwrt/feeds.conf
            openwrt/bin/**
            openwrt/build_dir/**
            openwrt/dl/**
            openwrt/feeds/**
            openwrt/package/**
            openwrt/staging_dir/**
            openwrt/tmp/**
